default:
  image: gitlab.virtualcitysystems.de:5050/vcsuite/devops/gitlabrunner/node:20-bullseye

variables:
  GIT_CLONE_PATH: $CI_BUILDS_DIR/$CI_PROJECT_PATH_SLUG/$CI_COMMIT_REF_SLUG

stages:
  - build
  - test
  - bundle
  - deploy
  - prepublish
  - version
  - publish
  - deployCluster

.template: &job_definition
  only:
    - /^(feature-.*|hotfix-.*|main|release-.*)$/
  tags:
    - linux-2.0

build:
  <<: *job_definition
  script:
    - npm ci
    - npm run ensure-types
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_RUNNER_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab.virtualcitysystems.de >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config user.name "Gitlab Runner"
    - git config user.email "gitlab-runner@vc.systems"
  stage: build

.after_build_template: &after_build_definition
  <<: *job_definition
  variables:
    GIT_STRATEGY: none

.staging_build_template: &staging_build_template
  <<: *after_build_definition
  except:
    variables:
      - $PUBLISH

lint:
  <<: *after_build_definition
  stage: test
  script:
    - npm run lint

type-check:
  <<: *after_build_definition
  stage: test
  script:
    - npm run type-check

test:
  <<: *after_build_definition
  stage: test
  script:
    - npm run coverage -- --reporter junit --outputFile test-report.xml
  coverage: '/^Statements\s*:\s*([^%]+)/'
  artifacts:
    reports:
      junit: test-report.xml

audit:
  <<: *after_build_definition
  stage: test
  script:
    - npm audit --production --audit-level=low

buildPreview:
  <<: *staging_build_template
  stage: bundle
  script:
    - npm run buildStagingApp

bundle:
  <<: *after_build_definition
  stage: bundle
  only:
    variables:
      - $PUBLISH
    refs:
      - /^(main|release-v.*)$/
  script:
    - npm run build

deployStaging:
  <<: *staging_build_template
  stage: deploy
  environment:
    name: staging/$CI_COMMIT_REF_SLUG
    url: http://$CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG.stagingcluster.intern.virtualcitysystems.de
    on_stop: stopEnvironment
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: ['']
  script:
    - /kaniko/executor --context dist/ --dockerfile node_modules/@vcmap/plugin-cli/assets/build/staging/Dockerfile --destination $CI_REGISTRY_IMAGE/staging:$CI_COMMIT_REF_SLUG
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json

stopEnvironment:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  image:
    name: bitnami/kubectl:latest
    entrypoint: ['']
  tags:
    - linux-2.0
  script:
    - echo "Stop environment staging/$CI_COMMIT_REF_NAME"
    - echo "Delete namespace on k9s $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG"
    - kubectl config use-context vcsuite/cluster-management:agent
    - kubectl delete namespace $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
  when: manual
  environment:
    name: staging/$CI_COMMIT_REF_SLUG
    action: stop

deployStagingCluster:
  stage: deployCluster
  except:
    variables:
      - $PUBLISH
  inherit:
    variables: false
  variables:
    STAGE_BRANCH: $CI_COMMIT_REF_SLUG
    STAGE_PROJECT_NAME: $CI_PROJECT_PATH_SLUG
    STAGE_REGISTRY_IMAGE: $CI_REGISTRY_IMAGE
    STAGE_NAMESPACE: $CI_PROJECT_PATH_SLUG-$CI_COMMIT_REF_SLUG
  trigger:
    project: vcsuite/devops/manifests
    branch: main

sshDependenciesCheck:
  <<: *after_build_definition
  stage: prepublish
  only:
    variables:
      - $PUBLISH
    refs:
      - /^(main|release-v.*)$/
  script:
    - echo "Checking for SSH dependencies in package.json..."
    - |
      if grep -E "git(\+ssh)?://git@gitlab|ssh://git@gitlab:|gitlab:" package.json; then
        echo "Error: SSH link dependencies found in package.json."
        exit 1
      else
        echo "No SSH link dependencies found."
      fi

version:
  <<: *after_build_definition
  stage: version
  only:
    variables:
      - $PUBLISH
    refs:
      - /^(main|release-v.*)$/
  script:
    - npm version patch -m "%s [skip-ci]"
    - TAG=`git describe --abbrev=0`
    - echo git push git@gitlab:vcsuite/"$CI_PROJECT_PATH".git
    - git push git@gitlab:"$CI_PROJECT_PATH".git $TAG
    - git push git@gitlab:"$CI_PROJECT_PATH".git HEAD:$CI_COMMIT_REF_NAME
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_RUNNER_KEY" | tr -d '\r' > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - ssh-keyscan gitlab >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - git config user.name "Gitlab Runner"
    - git config user.email "gitlab-runner@vc.systems"

publish:
  <<: *after_build_definition
  stage: publish
  only:
    refs:
      - /^(main|release-v.*)$/
    variables:
      - $PUBLISH
  script:
    - npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
    - npm publish --registry https://registry.npmjs.org --access public
